openapi: 3.0.3
info:
  title: Refugio Bastet
  description: API para gestionar una protectora de animales llamada "Refugio Bastet".
  version: 1.0.0
servers:
  - url: 'https://api.refugiobastet.com'

tags:
  - name: animals
    description: Operaciones a realizar sobre animales
  - name: locations
    description: Operaciones para las ubicaciones importantes de la protectora.
  - name: users
    description: Operaciones para gestionar a los usuarios

paths:
  /animals:
    get:
      tags:
        - animals
      summary: Listar los animales
      description: |
        Esta operación permite consultar todos los animales que hay en el refugio.
        - Poner la especie.
        - Introducir la edad en el caso de que te interesen los años del animal.
        - Escribir el tamaño del animal.
      parameters:
        - name: especie
          in: query
          description: Tipo de animal (perro, gato, hurón, etc.)
          required: false
          schema:
            type: string
        - name: edad
          in: query
          description: Edad del animal
          required: false
          schema:
            type: number
            format: int32
        - name: tamaño
          in: query
          description: Escribir el tamaño (pequeño/mediano/grande)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Devuelve la lista completa de animales de la protectora.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnimalOutDTO'
        '400':
          description: Bad Request (Error de validación en los datos de entrada)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - animals
      summary: Añade un nuevo animal
      description: |
        Esta operación permite registrar un nuevo animal al refugio.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimalInDTO'
      responses:
        '201':
          description: El animal ha sido registrado correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnimalOutDTO'
        '400':
          description: Bad Request (Error de validación en los datos de entrada)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /animal/{animalId}:
    get:
    put:
    delete:
  /animal/{animalId}/location/{locationId}:
    get:
    delete:
    put:
  /locations:
    get:
      tags:
        - locations
      summary: Listar las ubicaciones
      description: |
        Esta operación permite consultar todas las ubicaciones en las que pueden estar los animales de la protectora.
        - Ciudad por la que queramos filtrar.
        - Código postal que nos resulte de interés.
      parameters:
        - name: city
          in: query
          description: Ciudad
          required: false
          schema:
            type: string
        - name: zipCode
          in: query
          description: Código postal
          required: false
          schema:
            type: number
            format: int32
      responses:
        '200':
          description: Devuelve una lista de lugares.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationOutDTO'
        '400':
          description: Bad Request (Error de validación en los datos de entrada)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - locations
      summary: Añadir una nueva ubicación
      description: |
        Esta operación permite registrar una nueva ubicación vinculada a la protectora.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationInDTO'
      responses:
        '201':
          description: El sitio ha sido registrado correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationOutDTO'
        '400':
          description: Bad Request (Error de validación en los datos de entrada)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /location/{locationId}:
    get:
    put:
    delete:
  /users:
    get:
      tags:
        - users
      summary: Listar los usuarios
      description: |
        Esta operación permite consultar todos los usuarios del sistema.
      parameters:
        - name: name
          in: query
          description: Nombre real
          required: false
          schema:
            type: string
        - name: surname
          in: query
          description: Apellido
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Devuelve la lista completa de usuarios de la protectora.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserOutDTO'
        '400':
          description: Bad Request (Error de validación en los datos de entrada)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - users
      summary: Añadir un nuevo usuario
      description: |
        Esta operación permite registrar un nuevo usuario.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInDTO'
      responses:
        '201':
          description: El usuario ha sido registrado correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserOutDTO'
        '400':
          description: Bad Request (Error de validación en los datos de entrada)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /user/{userId}:
    get:
    put:
    delete:
  /user/{userId}/adoptions:
    get:
    post:
  /user/{userId}/adoption/{adoptionId}:
    get:
    delete:
    put:
  /user/{userId}/donations:
    get:
    post:
  /user/{userId}/donation/{donationId}:
    get:
    delete:
    put:

components:
  schemas:
    AnimalInDTO:
      type: object
      properties:
        name:
          type: string
          example: Coco
          description: El nombre del animal
        species:
          type: string
          example: Perro
          description: La especie del animal
        age:
          type: number
          format: int32
          example: 4
          description: La edad del animal
        breed:
          type: string
          example: Chihuahua
          description: La raza del animal
        size:
          type: string
          example: Pequeño
          description: El tamaño del animal
        neutered:
          type: boolean
          description: Si el animal está esterilizado o no
        price:
          type: number
          format: float
          example: 148.95
          description: El precio del animal
        description:
          type: string
          description: La descripción del animal (carácter, historia, necesidades especiales, etc.)
    AnimalOutDTO:
      type: object
      properties:
        id:
          type: number
          format: int32
          example: 1
          description: El identificador del animal
        incorporationDate:
          type: string
          format: date
          description: La fecha de incorporación del animal a la protectora
      allOf:
        - $ref: '#/components/schemas/AnimalInDTO'
    LocationInDTO:
      type: object
      properties:
        mainSite:
          type: boolean
          description: Si el lugar es la sede principal de la protectora o no
        address:
          type: string
          example: Avenida de Murcia, 75, 2.º G
          description: Dirección del sitio
        zipCode:
          type: number
          format: int32
          example: 17260
          description: Código postal del lugar
        city:
          type: string
          example: Gijón
          description: Ciudad del sitio
        description:
          type: string
          description: Descripción libre del lugar para expandir información
    LocationOutDTO:
      type: object
      properties:
        id:
          type: number
          format: int32
          example: 12
          description: El identificador de la localización
      allOf:
        - $ref: '#/components/schemas/LocationInDTO'
    UserInDTO:
      type: object
      properties:
        username:
          type: string
          example: PedroPicapiedra3
          description: Nombre de usuario
        password:
          type: string
          description: Contraseña del usuario
        name:
          type: string
          example: Pedro
          description: Nombre real del usuario
        surname:
          type: string
          example: Roca
          description: Apellidos del usuario
        dateOfBirth:
          type: string
          format: date
          example: 1989-04-21
          description: Fecha de nacimiento del usuario
        email:
          type: string
          example: pedroPicapiedra@ejemplo.com
          description: Dirección de email del usuario
    UserOutDTO:
      type: object
      properties:
        id:
          type: number
          format: int32
          example: 8
          description: El identificador del usuario
      allOf:
        - $ref: '#/components/schemas/UserOutDTO'
    Adoption:
    Donation:
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          format: int32
        message:
          type: string
        errors:
          type: array
          items:
            type: string
    BadRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        code: 400
        message: Validation Error
        errors:
          - El nombre es obligatorio.
          - El precio debe ser mayor que cero.
    InternalServerError:
      type: object
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        code: 500
        message: Internal Server Error
